import random
from datetime import datetime

timestamp = int(datetime.now().timestamp())

# Use the timestamp as the seed so that the random numbers are reproducable
# However, from the generated random numbers
# We pick the ith number on the basis of some other random process
# Potentially the noise in the system performance

random.seed(timestamp)
for i in range(10):
    print(random.random())

print()

random.seed(timestamp)
for i in range(10):
    print(random.random())

print()

# In theory, this means that we could reproduce the number after
# it has been generated by using the correct timestamp as the seed
# and then by checking until we find i such that random.random()
# is the same as the generated number
# this also means that we cannot predict what the correct number
# would be in advance by just knowing the timestamp

# If we consider forcing it to be of a specific bit length,
# we could do something like

random.seed(timestamp)
for i in range(10):
    r = random.randint(2**64, 2**65 - 1)
    print(bin(r), r)

print()

random.seed(timestamp)
for i in range(10):
    r = random.randint(2**64, 2**65 - 1)
    print(bin(r), r)

print()
